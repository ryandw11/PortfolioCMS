<link rel="stylesheet" href="/content/css/admin_component.css">
<div class="container">
    <h2 class="txt-color text-center">Text Element</h2>
    <div class="alert alert-danger w-20 container" id="page-error" style="display: none;" role="alert">
        <i data-feather="alert-circle"></i>
        <span></span>
    </div>
    <input type="hidden" name="" id="txt" value="{{componentData}}">
    <form action="" method="post" id="form">
        <input type="hidden" name="type" value="txt" />
        <input type="hidden" name="text" id="text" />

        <label class="txt-color" for="text">Please type your text! <br> Hint: You can use markdown to spruce up your
            text!</label>
        <div id="text-container"></div>

        <script src="/content/monaco-editor/min/vs/loader.js"></script>
        <script>
            require.config({ paths: { 'vs': '/content/monaco-editor/min/vs' } });
            require(['vs/editor/editor.main'], function () {
                window.editor = monaco.editor.create(document.getElementById('text-container'), {
                    value: document.getElementById("txt").value,
                    language: 'markdown',
                    theme: "vs-dark"
                });
            });

            function onSubmit() {
                var value = window.editor.getValue()
                document.getElementById('text').value = value;
                document.getElementById('form').submit();
            }
        </script>
        <section>
            <span class="txt-color"><a class="btn main-color txt-color" onclick="onSubmit()">Save</a></span>
            <a href="../" class="btn btn-danger">Cancel</a>
        </section>
    </form>
</div>

<script>
    window.addEventListener("load", () => {
        const url = new URL(location.href);
        const err = url.searchParams.get("err");
        const errorDoc = document.getElementById("page-error");
        if (err == null) return;
        switch (err) {
            case "1":
                errorDoc.getElementsByTagName("span")[0].textContent = "Error: There must be text in the text area.";
                errorDoc.style.display = "block";
                break;
        }
    });
</script>